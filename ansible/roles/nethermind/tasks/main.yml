---
- name: Install Nethermind dependencies
  ansible.builtin.package:
    name:
      - unzip
    state: present

- name: Ensure user exists - "{{ nm_user }}"
  ansible.builtin.user:
    name: "{{ nm_user }}"
    shell: /bin/false
    password:
    system: true

- name: Ensure Nethermind directory present - "{{ nm_dir }}"
  ansible.builtin.file:
    path: "{{ nm_dir }}"
    owner: "{{ nm_user }}"
    group: "{{ nm_user }}"
    state: directory
    mode: "0770"

- name: Ensure data directory present
  ansible.builtin.file:
    path: "{{ nm_data_dir }}"
    owner: "{{ nm_user }}"
    group: "{{ nm_user }}"
    state: directory
    mode: "0770"

- name: Ensure Nethermind config directory present - "{{ nm_config_dir }}"
  ansible.builtin.file:
    path: "{{ nm_config_dir }}"
    owner: "{{ nm_user }}"
    group: "{{ nm_user }}"
    state: directory
    mode: "0770"

- name: Ensure Nethermind keystore directory present"
  ansible.builtin.file:
    path: "{{ nm_dir }}/keystore"
    owner: "{{ nm_user }}"
    group: "{{ nm_user }}"
    state: directory
    mode: "0770"

- name: Ensure log directory present
  ansible.builtin.file:
    path: /var/log/nethermind
    state: directory
    owner: "{{ nm_user }}"
    group: "{{ nm_user }}"
    mode: "0770"

# Encrypted in vault for simplicy, would be better to use AWS Secret Manager or HC Vault
- name: Write JWT secret to keystore directory
  ansible.builtin.copy:
    content: "{{ jwt_secret }}"
    dest: "{{ nm_dir }}/keystore/jwt-secret-ansible.hex"
    owner: "{{ nm_user }}"
    group: "{{ nm_user }}"
    mode: "0600"

# Only download and install NM if not present or current version != specified version
- name: Check if Nethermind executable exists
  ansible.builtin.stat:
    path: "{{ nm_dir }}/current/nethermind"
  register: nethermind_executable

- name: Set default values
  ansible.builtin.set_fact:
    current_version: "not installed"
    update_needed: true

- name: Nethermind version checking tasks
  when: nethermind_executable.stat.exists
  block:
    - name: Run Nethermind version command
      ansible.builtin.command: "{{ nm_dir }}/current/nethermind -v"
      register: nethermind_version_output
      changed_when: nethermind_version_output.rc != 0

    - name: Extract version number
      ansible.builtin.set_fact:
        current_version: "{{ nethermind_version_output.stdout | regex_search('Version: ([0-9.]+)', '\\1') | first }}"
      when: nethermind_version_output is defined and nethermind_version_output.rc == 0

    - name: Check if update is needed
      ansible.builtin.set_fact:
        update_needed: "{{ current_version != nm_version }}"

- name: Display current version
  ansible.builtin.debug:
    msg: "Current Nethermind version: {{ current_version }}"

- name: Update or Install Nethermind
  when: update_needed
  block:
    - name: Download nethermind binary from nethermind.io
      ansible.builtin.get_url:
        url: "https://nethdev.blob.core.windows.net/builds/nethermind-{{ nm_version }}-{{ nm_git_hash }}-linux-x64.zip"
        dest: "/tmp/nethermind-{{ nm_version }}-{{ nm_git_hash }}-linux-x64.zip"
        mode: "0775"

    - name: Verify package signature
      ansible.builtin.script: >
        ./scripts/package_signature_verification.sh -f /tmp/nethermind-{{ nm_version }}-{{ nm_git_hash }}-linux-x64.zip
        -sl "https://nethdev.blob.core.windows.net/builds/nethermind-{{ nm_version }}-{{ nm_git_hash }}-linux-x64.zip.asc"
        -k {{ key.nethermind_mateusz }}

    - name: Create install directory
      ansible.builtin.file:
        path: "{{ nm_dir }}/nethermind-{{ nm_version }}-{{ nm_git_hash }}"
        owner: "{{ nm_user }}"
        group: "{{ nm_user }}"
        state: directory
        mode: "0770"

    - name: Install Nethermind
      ansible.builtin.unarchive:
        src: "/tmp/nethermind-{{ nm_version }}-{{ nm_git_hash }}-linux-x64.zip"
        dest: "{{ nm_dir }}/nethermind-{{ nm_version }}-{{ nm_git_hash }}"
        owner: "{{ nm_user }}"
        group: "{{ nm_user }}"
        mode: '0750'
        remote_src: true

    - name: Stop Nethermind service if present
      ansible.builtin.systemd_service:
        name: nethermind
        state: stopped
      register: result_systemd_stop
      failed_when:
        - result_systemd_stop is failed
        - "'Could not find the requested service' not in result_systemd_stop.msg"

    - name: Create symlink to current version
      ansible.builtin.file:
        src: "{{ nm_dir }}/nethermind-{{ nm_version }}-{{ nm_git_hash }}/"
        dest: "{{ nm_dir }}/current"
        state: link

    - name: Display install message
      ansible.builtin.debug:
        msg: "Nethermind installed: Version {{ nm_version }}-{{ nm_git_hash }}"

    - name: Start Nethermind if present
      ansible.builtin.systemd_service:
        name: nethermind
        state: started
        enabled: true
      register: result_systemd_start
      failed_when:
        - result_systemd_start is failed
        - "'Could not find the requested service' not in result_systemd_start.msg"
# NM Config
- name: Template Nethermind service file
  ansible.builtin.template:
    src: nethermind.service.j2
    dest: /etc/systemd/system/nethermind.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Restart Nethermind
